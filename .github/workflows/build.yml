name: Build and release Docker images

on:
  workflow_dispatch:
  push:
    branches:
      - 'build/**'

env:
  DOCKER_REGISTRY_URL: cr.magos.cc
  CLIENT_IMAGE_NAME: slavtrash_client
  SERVER_IMAGE_NAME: slavtrash_server

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version
        id: strip-branch-name
        run: |
          release_version=$(echo "${{ github.ref }}" | sed 's/refs\/heads\/.*\///')
          echo "Building release version $release_version"
          echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV
        shell: bash

      - name: Build the client Docker image
        run: |
          docker build ./client --file client/Dockerfile.prod --tag ${{ env.CLIENT_IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          docker tag ${{ env.CLIENT_IMAGE_NAME }}:${{ env.RELEASE_VERSION }} ${{ env.DOCKER_REGISTRY_URL }}/${{ env.CLIENT_IMAGE_NAME }}:latest

      - name: Build the server Docker image
        run: |
          docker build ./server --file server/Dockerfile --tag ${{ env.SERVER_IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          docker tag ${{ env.SERVER_IMAGE_NAME }}:${{ env.RELEASE_VERSION }} ${{ env.DOCKER_REGISTRY_URL }}/${{ env.SERVER_IMAGE_NAME }}:latest

      - name: Push the client Docker image with version number
        run: docker push ${{ env.DOCKER_REGISTRY_URL }}/${{ env.CLIENT_IMAGE_NAME }}:${{ env.RELEASE_VERSION }}

      - name: Push the client Docker image with latest tag
        run: docker push ${{ env.DOCKER_REGISTRY_URL }}/${{ env.CLIENT_IMAGE_NAME }}:latest

      - name: Push the server Docker image with version number
        run: docker push ${{ env.DOCKER_REGISTRY_URL }}/${{ env.SERVER_IMAGE_NAME }}:${{ env.RELEASE_VERSION }}

      - name: Push the server Docker image with latest tag
        run: docker push ${{ env.DOCKER_REGISTRY_URL }}/${{ env.SERVER_IMAGE_NAME }}:latest

      - name: Remove the client Docker image locally
        run: |
          docker rmi ${{ env.CLIENT_IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          docker rmi ${{ env.DOCKER_REGISTRY_URL }}/${{ env.CLIENT_IMAGE_NAME }}:latest

      - name: Remove the server Docker image locally
        run: |
          docker rmi ${{ env.SERVER_IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
          docker rmi ${{ env.DOCKER_REGISTRY_URL }}/${{ env.SERVER_IMAGE_NAME }}:latest
